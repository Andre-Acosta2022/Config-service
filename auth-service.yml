spring:
  application:
    name: auth-service
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/clinica-realm
          jwk-set-uri: http://localhost:8080/realms/clinica-realm/protocol/openid-connect/certs
      client:
        registration:
          keycloak:
            client-id: clinica-client
            client-secret: KfmLbZV2zCBNyXzxrqvVnyubDVBo2g7C
            provider: keycloak
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/keycloak"
        provider:
          keycloak:
            issuer-uri: http://localhost:8080/realms/clinica-realm
            authorization-uri: http://localhost:8080/realms/clinica-realm/protocol/openid-connect/auth
            token-uri: http://localhost:8080/realms/clinica-realm/protocol/openid-connect/token
            jwk-set-uri: http://localhost:8080/realms/clinica-realm/protocol/openid-connect/certs
server:
  port: 8089
  datasource:
    url: jdbc:mysql://mysqldb:3306/clinica_db
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
jwt:
  auth:
    converter:
      resource-id: clinica-client
      principle-attribute: preferred_username
logging:
  level:
    org.keycloak: DEBUG
