spring:
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: eureka-service
          uri: lb://eureka-server
          predicates:
            - Path=/eureka/**
          filters:
            - name: CircuitBreaker
              args:
                name: eurekaCircuitBreaker
                fallbackUri: forward:/fallback/eureka

        - id: cita-service
          uri: lb://cita-service
          predicates:
            - Path=/api/citas/**
          filters:
            - name: CircuitBreaker
              args:
                name: citaServiceCircuitBreaker
                fallbackUri: forward:/fallback/cita-service

        - id: personal-service
          uri: lb://personal-service
          predicates:
            - Path=/api/**
          filters:
            - name: CircuitBreaker
              args:
                name: personalServiceCircuitBreaker
                fallbackUri: forward:/fallback/personal-service

        - id: clinicas-service
          uri: lb://clinicas-service
          predicates:
            - Path=/api/**
          filters:
            - name: CircuitBreaker
              args:
                name: clinicasServiceCircuitBreaker
                fallbackUri: forward:/fallback/clinicas-service

        - id: historial-clinico-service
          uri: lb://historial-clinico-service
          predicates:
            - Path=/api/**
          filters:
            - name: CircuitBreaker
              args:
                name: historialclinicoServiceCircuitBreaker
                fallbackUri: forward:/fallback/historial-clinico-service

        - id: informes-service
          uri: lb://informes-service
          predicates:
            - Path=/api/informes/**
          filters:
            - name: CircuitBreaker
              args:
                name: informesServiceCircuitBreaker
                fallbackUri: forward:/fallback/informes-service

        - id: pacientes-service
          uri: lb://pacientes-service
          predicates:
            - Path=/api/pacientes/**
          filters:
            - name: CircuitBreaker
              args:
                name: pacientesServiceCircuitBreaker
                fallbackUri: forward:/fallback/pacientes-service
            - StripPrefix=1

        - id: pagos-service
          uri: lb://pagos-service
          predicates:
            - Path=/api/**
          filters:
            - name: CircuitBreaker
              args:
                name: pagosServiceCircuitBreaker
                fallbackUri: forward:/fallback/pagos-service
            - StripPrefix=1

        - id: rate-limited-route
          filters:
            - name: RequestRateLimiter
              args:
                redis-rate-limiter.replenishRate: 10
                redis-rate-limiter.burstCapacity: 20
                redis-rate-limiter.requestedTokens: 1

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://keycloak:8080/realms/clinic-realm # Verifica la URL de Keycloak

  resilience4j:
    circuitbreaker:
      instances:
        eurekaCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
  
        citaServiceCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
  
        personalServiceCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
  
        clinicasServiceCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
  
        historialclinicoServiceCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
  
        informesServiceCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
  
        pacientesServiceCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000
  
        pagosServiceCircuitBreaker:
          registerHealthIndicator: true
          slidingWindowSize: 10
          failureRateThreshold: 50
          waitDurationInOpenState: 10000


management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics, prometheus  # Para monitoreo de salud y métricas

# Asegúrate de que Redis esté correctamente configurado si usas rate limiting
